name: Build & Push Docker Images

on:
  push:
    paths:
      - '.github/workflows/docker.yml'
      - '.devcontainers/Dockerfile.codespaces'
      - '.devcontainers/Dockerfile.ci'

  workflow_dispatch:
    inputs:
      enable_debug:
        description: 'Enable debug logging'
        required: false
        default: 'false'

permissions:
  contents: read
  packages: write

jobs:
  build-push-images:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Enable GitHub Actions debug mode
        if: ${{ github.event.inputs.enable_debug == 'true' }}
        run: echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Validate Dockerfile paths
        id: validate-paths
        run: |
          echo "Checking Dockerfile.codespaces..."
          if [ -f ".devcontainers/Dockerfile.codespaces" ]; then
            echo "Checking Dockerfile.codespaces... Exists!"
            echo "codespaces=dockerfile" >> $GITHUB_OUTPUT
          else
            echo "Checking Dockerfile.codespaces... Not found!"
            echo "codespaces=skip" >> $GITHUB_OUTPUT
          fi

          echo "Checking Dockerfile.ci..."
          if [ -f ".devcontainers/Dockerfile.ci" ]; then
            echo "Checking Dockerfile.ci... Exists!"
            echo "ci=dockerfile" >> $GITHUB_OUTPUT
          else
            echo "Checking Dockerfile.ci... Not found!"
            echo "ci=skip" >> $GITHUB_OUTPUT
          fi

      - name: Show current directory
        run: pwd
        
      - name: List top-level files
        run: ls -la
        
      - name: Recursively list all files
        run: find . -type f | sort


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Search for Dockerfiles
        run: |
          echo "Searching for Dockerfile.codespaces..."
          find . -name 'Dockerfile.codespaces' || echo "Not found"
      
          echo "Searching for Dockerfile.ci..."
          find . -name 'Dockerfile.ci' || echo "Not found"

      - name: Build & Push Dev Image
        if: steps.validate-paths.outputs.codespaces == 'dockerfile'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .devcontainers/Dockerfile.codespaces
          push: true
          tags: |
            ghcr.io/ulfbou/zentient-dev:latest
            ghcr.io/ulfbou/zentient-dev:${{ github.sha }}

      - name: Skip Dev Image
        if: steps.validate-paths.outputs.codespaces == 'skip'
        run: echo "Skipping Dev Image build — Dockerfile.codespaces not found."

      - name: Build & Push CI Image
        if: steps.validate-paths.outputs.ci == 'dockerfile'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .devcontainers/Dockerfile.ci
          push: true
          tags: |
            ghcr.io/ulfbou/zentient-ci:latest
            ghcr.io/ulfbou/zentient-ci:${{ github.sha }}

      - name: Skip CI Image
        if: steps.validate-paths.outputs.ci == 'skip'
        run: echo "Skipping CI Image build — Dockerfile.ci not found."
